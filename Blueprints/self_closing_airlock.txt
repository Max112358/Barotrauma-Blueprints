<Root>
  <Item name="" identifier="circuitbox" ID="1013" markedfordeconstruction="false" flippedx="true" rect="208,-8,32,32" NonInteractable="False" NonPlayerTeamInteractable="False" AllowSwapping="True" Rotation="0" Scale="0.5" SpriteColor="255,255,255,255" InventoryIconColor="255,255,255,255" ContainerColor="255,255,255,255" InvulnerableToDamage="False" Tags="smallitem" DisplaySideBySideWhenLinked="False" DisallowedUpgrades="" SpriteDepth="0.8" HiddenInGame="False" conditionpercentage="100">
    <Holdable Attached="True" SpriteDepthWhenDropped="0.55" PickingTime="5" CanBePicked="True" LockGuiFramePosition="False" GuiFrameOffset="0,0" AllowInGameEditing="True" Msg="ItemMsgDetachWrench">
      <requireditem items="wrench" type="Equipped" characterinventoryslottype="None" optional="false" ignoreineditor="false" excludebroken="true" requireempty="false" excludefullcondition="false" targetslot="-1" allowvariants="true" rotation="0" setactive="false" />
    </Holdable>
    <ConnectionPanel Locked="False" PickingTime="0" CanBePicked="False" LockGuiFramePosition="False" GuiFrameOffset="0,0" AllowInGameEditing="True" Msg="ItemMsgRewireScrewdriver">
      <requireditem items="screwdriver" type="Equipped" characterinventoryslottype="None" optional="false" ignoreineditor="false" excludebroken="true" requireempty="false" excludefullcondition="false" targetslot="-1" allowvariants="true" rotation="0" setactive="false" />
      <input name="signal_in1" />
      <input name="signal_in2" />
      <input name="signal_in3" />
      <input name="signal_in4" />
      <input name="signal_in5" />
      <input name="signal_in6" />
      <input name="signal_in7" />
      <input name="signal_in8" />
      <output name="signal_out1" />
      <output name="signal_out2" />
      <output name="signal_out3" />
      <output name="signal_out4" />
      <output name="signal_out5" />
      <output name="signal_out6" />
      <output name="signal_out7" />
      <output name="signal_out8" />
    </ConnectionPanel>
    <ItemContainer QuickUseMovesItemsInside="False" ContainableRestrictions="" AutoFill="True" PickingTime="0" CanBePicked="False" LockGuiFramePosition="False" GuiFrameOffset="0,0" AllowInGameEditing="True" Msg="" contained="1093,1096,1094,1100,1097,1101,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,," ExtraStackSize="0" />
    <ItemContainer QuickUseMovesItemsInside="False" ContainableRestrictions="" AutoFill="True" PickingTime="0" CanBePicked="False" LockGuiFramePosition="False" GuiFrameOffset="0,0" AllowInGameEditing="True" Msg="" contained="1102;1103;1105,,,,,,,,," ExtraStackSize="0" />
    <CircuitBox Locked="False" PickingTime="0" CanBePicked="False" LockGuiFramePosition="False" GuiFrameOffset="0,0" AllowInGameEditing="True" Msg="ItemMsgInteractSelect">
      <InputNode pos="-835.7718,23.269592">
        <ConnectionLabelOverride name="signal_in7" value="door to ocean state out" />
        <ConnectionLabelOverride name="signal_in1" value="toggle docking from nav terminal" />
        <ConnectionLabelOverride name="signal_in5" value="docking hatch on_undock" />
        <ConnectionLabelOverride name="signal_in6" value="guard drowner switch" />
        <ConnectionLabelOverride name="signal_in3" value="docking hatch state_out" />
        <ConnectionLabelOverride name="signal_in2" value="door state out" />
        <ConnectionLabelOverride name="signal_in4" value="docking hatch on_dock" />
      </InputNode>
      <OutputNode pos="2342.3813,26.177307">
        <ConnectionLabelOverride name="signal_out4" value="set state on door to ocean" />
        <ConnectionLabelOverride name="signal_out3" value="set state on door to sub" />
        <ConnectionLabelOverride name="signal_out2" value="toggle door" />
        <ConnectionLabelOverride name="signal_out1" value="toggle docking hatch" />
      </OutputNode>
      <Component id="0" position="571.5154,205.4549" backingitemid="0,0" usedresource="fpgacircuit"  Class="BooleanOperatorComponent"  Output="1"  FalseOutput=""  TimeFrame="0"  item="andcomponent" />
      <Component id="1" position="-74.646484,232.55109" backingitemid="1,0" usedresource="fpgacircuit"  Class="NotComponent"  ContinuousOutput="false"  item="notcomponent" />
      <Component id="2" position="-1.6679688,-546.73083" backingitemid="2,0" usedresource="fpgacircuit"  Class="DelayComponent"  Delay="8"  ResetWhenSignalReceived="false"  ResetWhenDifferentSignalReceived="true"  item="delaycomponent" />
      <Component id="3" position="-204.80762,-748.06995" backingitemid="3,0" usedresource="fpgacircuit"  Class="NotComponent"  ContinuousOutput="false"  item="notcomponent" />
      <Component id="4" position="630.66504,-542.8634" backingitemid="4,0" usedresource="fpgacircuit"  Class="BooleanOperatorComponent"  Output="1"  FalseOutput=""  TimeFrame="0"  item="andcomponent" />
      <Component id="5" position="48.65454,883.54626" backingitemid="5,0" usedresource="fpgacircuit"  Class="BooleanOperatorComponent"  Output="1"  FalseOutput=""  TimeFrame="0"  item="andcomponent" />
      <Wire id="0" backingitemid="" prefab="bluewire">
        <From name="signal_in3" target="" />
        <To name="signal_in2" target="0" />
      </Wire>
      <Wire id="1" backingitemid="" prefab="bluewire">
        <From name="signal_in2" target="" />
        <To name="signal_in" target="1" />
      </Wire>
      <Wire id="2" backingitemid="0,0" prefab="bluewire">
        <From name="signal_out" target="1" />
        <To name="signal_in1" target="0" />
      </Wire>
      <Wire id="3" backingitemid="" prefab="bluewire">
        <From name="signal_in3" target="" />
        <To name="signal_in" target="3" />
      </Wire>
      <Wire id="4" backingitemid="" prefab="bluewire">
        <From name="signal_in2" target="" />
        <To name="signal_in1" target="5" />
      </Wire>
      <Wire id="5" backingitemid="" prefab="bluewire">
        <From name="signal_in5" target="" />
        <To name="signal_in2" target="5" />
      </Wire>
      <Wire id="6" backingitemid="" prefab="bluewire">
        <From name="signal_out" target="5" />
        <To name="signal_out2" target="" />
      </Wire>
      <Wire id="7" backingitemid="" prefab="bluewire">
        <From name="signal_in2" target="" />
        <To name="signal_in" target="2" />
      </Wire>
      <Wire id="8" backingitemid="0,1" prefab="bluewire">
        <From name="signal_out" target="3" />
        <To name="signal_in2" target="4" />
      </Wire>
      <Wire id="9" backingitemid="0,2" prefab="bluewire">
        <From name="signal_out" target="2" />
        <To name="signal_in1" target="4" />
      </Wire>
      <Wire id="10" backingitemid="" prefab="bluewire">
        <From name="signal_out" target="4" />
        <To name="signal_out2" target="" />
      </Wire>
      <Wire id="11" backingitemid="" prefab="redwire">
        <From name="signal_in1" target="" />
        <To name="signal_out1" target="" />
      </Wire>
      <Wire id="12" backingitemid="" prefab="redwire">
        <From name="signal_out" target="0" />
        <To name="signal_out2" target="" />
      </Wire>
      <Label id="0" color="#37FF37" position="-1095.7781,193.07379" size="302.96008,169.78787" header="SIGNAL_IN_1" body="label.automateddockinghatch.signal1" />
      <Label id="1" color="#FFC200" position="-1089.1138,103.08121" size="298.7047,116.850464" header="SIGNAL_IN_2" body="label.automateddockinghatch.signal2" />
      <Label id="2" color="#DDA056" position="-1088.8595,-84.467285" size="301.21704,256" header="SIGNAL_IN_3" body="label.automateddockinghatch.signal3" />
      <Label id="3" color="#FFFFFF" position="2632.8655,153.22531" size="289.4015,179.89081" header="SIGNAL_OUT_1" body="label.automateddockinghatch.signalout1" />
      <Label id="4" color="#FF0000" position="2634.9038,39.83786" size="287.40137,184.91278" header="SIGNAL_OUT_2" body="label.automateddockinghatch.signalout2" />
      <Label id="5" color="#7ED3E0" position="-1091.6986,-201.80768" size="284.01074,256" header="SIGNAL_IN_4" body="ON_DOCK" />
      <Label id="6" color="#7ED3E0" position="-1086.1448,-293.88" size="282.21948,223.72986" header="SIGNAL_IN_5" body="ON_UNDOCK" />
      <Label id="7" color="#7ED3E0" position="364.70526,149.81427" size="1462.7697,692.4911" header="open on dock" body="if docked, and door is not open, and guard drowner isnt on, open the door." />
      <Label id="8" color="#7ED3E0" position="206.97406,-676.83813" size="1521.3209,618.8059" header="close door at sea" body="If at sea and the door is open, close it after a delay." />
      <Label id="9" color="#7ED3E0" position="75.15485,969.8597" size="667.0513,360.19006" header="close door on undock" body="If you just undocked and the door is open, immediately close the door." />
      <Label id="10" color="#FF00FF" position="2244.7256,-564.48303" size="981.7676,216.5232" header="Purpose" body="This circuit is ment to replace the default docking hatch. It has the ability to drown station guards via a switch, and also to close the doors automatically after a while in normal operation." />
      <Label id="11" color="#7E00E0" position="2308.8633,683.50287" size="870.48096,240.2406" header="Description" body="An airlock replacement that can drown station guards." />
    </CircuitBox>
    <itemstats />
  </Item>
</Root>