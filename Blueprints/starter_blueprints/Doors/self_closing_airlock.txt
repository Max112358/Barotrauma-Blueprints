<Root>
  <Item name="" identifier="circuitbox" ID="1013" markedfordeconstruction="false" flippedx="true" rect="208,-8,32,32" NonInteractable="False" NonPlayerTeamInteractable="False" AllowSwapping="True" Rotation="0" Scale="0.5" SpriteColor="255,255,255,255" InventoryIconColor="255,255,255,255" ContainerColor="255,255,255,255" InvulnerableToDamage="False" Tags="smallitem" DisplaySideBySideWhenLinked="False" DisallowedUpgrades="" SpriteDepth="0.8" HiddenInGame="False" conditionpercentage="100">
    <Holdable Attached="True" SpriteDepthWhenDropped="0.55" PickingTime="5" CanBePicked="True" LockGuiFramePosition="False" GuiFrameOffset="0,0" AllowInGameEditing="True" Msg="ItemMsgDetachWrench">
      <requireditem items="wrench" type="Equipped" characterinventoryslottype="None" optional="false" ignoreineditor="false" excludebroken="true" requireempty="false" excludefullcondition="false" targetslot="-1" allowvariants="true" rotation="0" setactive="false" />
    </Holdable>
    <ConnectionPanel Locked="False" PickingTime="0" CanBePicked="False" LockGuiFramePosition="False" GuiFrameOffset="0,0" AllowInGameEditing="True" Msg="ItemMsgRewireScrewdriver">
      <requireditem items="screwdriver" type="Equipped" characterinventoryslottype="None" optional="false" ignoreineditor="false" excludebroken="true" requireempty="false" excludefullcondition="false" targetslot="-1" allowvariants="true" rotation="0" setactive="false" />
      <input name="signal_in1" />
      <input name="signal_in2" />
      <input name="signal_in3" />
      <input name="signal_in4" />
      <input name="signal_in5" />
      <input name="signal_in6" />
      <input name="signal_in7" />
      <input name="signal_in8" />
      <output name="signal_out1" />
      <output name="signal_out2" />
      <output name="signal_out3" />
      <output name="signal_out4" />
      <output name="signal_out5" />
      <output name="signal_out6" />
      <output name="signal_out7" />
      <output name="signal_out8" />
    </ConnectionPanel>
    <ItemContainer QuickUseMovesItemsInside="False" ContainableRestrictions="" AutoFill="True" PickingTime="0" CanBePicked="False" LockGuiFramePosition="False" GuiFrameOffset="0,0" AllowInGameEditing="True" Msg="" contained="1138,1139,1140,1182,1183,1184,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,," ExtraStackSize="0" />
    <ItemContainer QuickUseMovesItemsInside="False" ContainableRestrictions="" AutoFill="True" PickingTime="0" CanBePicked="False" LockGuiFramePosition="False" GuiFrameOffset="0,0" AllowInGameEditing="True" Msg="" contained="1185;1186;2928,,,,,,,,," ExtraStackSize="0" />
    <CircuitBox Locked="False" PickingTime="0" CanBePicked="False" LockGuiFramePosition="False" GuiFrameOffset="0,0" AllowInGameEditing="True" Msg="ItemMsgInteractSelect">
      <requireditem items="idcard" type="Picked" characterinventoryslottype="None" optional="false" ignoreineditor="true" excludebroken="true" requireempty="false" excludefullcondition="false" targetslot="-1" allowvariants="true" rotation="0" setactive="false" msg="UNAUTHORIZED ACCESS" />
      <InputNode pos="-836,23">
        <ConnectionLabelOverride name="signal_in2" value="door state out" />
        <ConnectionLabelOverride name="signal_in5" value="docking hatch on_undock" />
        <ConnectionLabelOverride name="signal_in3" value="docking hatch state_out" />
        <ConnectionLabelOverride name="signal_in1" value="toggle docking from nav terminal" />
      </InputNode>
      <OutputNode pos="2342,26">
        <ConnectionLabelOverride name="signal_out2" value="toggle door" />
        <ConnectionLabelOverride name="signal_out1" value="toggle docking hatch" />
      </OutputNode>
      <Component id="0" position="572,205" backingitemid="0,0" usedresource="fpgacircuit" Class=<<<STRINGSTART>>>AndComponent<<<STRINGEND>>> TimeFrame=<<<STRINGSTART>>>0<<<STRINGEND>>> Output=<<<STRINGSTART>>>1<<<STRINGEND>>> FalseOutput=<<<STRINGSTART>>><<<STRINGEND>>> item=<<<STRINGSTART>>>andcomponent<<<STRINGEND>>> />
      <Component id="1" position="-75,233" backingitemid="1,0" usedresource="fpgacircuit" Class=<<<STRINGSTART>>>NotComponent<<<STRINGEND>>> ContinuousOutput=<<<STRINGSTART>>>false<<<STRINGEND>>> item=<<<STRINGSTART>>>notcomponent<<<STRINGEND>>> />
      <Component id="2" position="-2,-547" backingitemid="2,0" usedresource="fpgacircuit" Class=<<<STRINGSTART>>>DelayComponent<<<STRINGEND>>> Delay=<<<STRINGSTART>>>8<<<STRINGEND>>> ResetWhenSignalReceived=<<<STRINGSTART>>>false<<<STRINGEND>>> ResetWhenDifferentSignalReceived=<<<STRINGSTART>>>true<<<STRINGEND>>> item=<<<STRINGSTART>>>delaycomponent<<<STRINGEND>>> />
      <Component id="3" position="-205,-748" backingitemid="3,0" usedresource="fpgacircuit" Class=<<<STRINGSTART>>>NotComponent<<<STRINGEND>>> ContinuousOutput=<<<STRINGSTART>>>false<<<STRINGEND>>> item=<<<STRINGSTART>>>notcomponent<<<STRINGEND>>> />
      <Component id="4" position="631,-543" backingitemid="4,0" usedresource="fpgacircuit" Class=<<<STRINGSTART>>>AndComponent<<<STRINGEND>>> TimeFrame=<<<STRINGSTART>>>0<<<STRINGEND>>> Output=<<<STRINGSTART>>>1<<<STRINGEND>>> FalseOutput=<<<STRINGSTART>>><<<STRINGEND>>> item=<<<STRINGSTART>>>andcomponent<<<STRINGEND>>> />
      <Component id="5" position="49,884" backingitemid="5,0" usedresource="fpgacircuit" Class=<<<STRINGSTART>>>AndComponent<<<STRINGEND>>> TimeFrame=<<<STRINGSTART>>>0<<<STRINGEND>>> Output=<<<STRINGSTART>>>1<<<STRINGEND>>> FalseOutput=<<<STRINGSTART>>><<<STRINGEND>>> item=<<<STRINGSTART>>>andcomponent<<<STRINGEND>>> />
      <Wire id="0" backingitemid="" prefab="bluewire">
        <From name="signal_in3" target="" />
        <To name="signal_in2" target="0" />
      </Wire>
      <Wire id="1" backingitemid="" prefab="bluewire">
        <From name="signal_in2" target="" />
        <To name="signal_in" target="1" />
      </Wire>
      <Wire id="2" backingitemid="0,0" prefab="bluewire">
        <From name="signal_out" target="1" />
        <To name="signal_in1" target="0" />
      </Wire>
      <Wire id="3" backingitemid="" prefab="bluewire">
        <From name="signal_in3" target="" />
        <To name="signal_in" target="3" />
      </Wire>
      <Wire id="4" backingitemid="" prefab="bluewire">
        <From name="signal_in2" target="" />
        <To name="signal_in1" target="5" />
      </Wire>
      <Wire id="5" backingitemid="" prefab="bluewire">
        <From name="signal_in5" target="" />
        <To name="signal_in2" target="5" />
      </Wire>
      <Wire id="6" backingitemid="" prefab="bluewire">
        <From name="signal_out" target="5" />
        <To name="signal_out2" target="" />
      </Wire>
      <Wire id="7" backingitemid="" prefab="bluewire">
        <From name="signal_in2" target="" />
        <To name="signal_in" target="2" />
      </Wire>
      <Wire id="8" backingitemid="0,1" prefab="bluewire">
        <From name="signal_out" target="3" />
        <To name="signal_in2" target="4" />
      </Wire>
      <Wire id="9" backingitemid="0,2" prefab="bluewire">
        <From name="signal_out" target="2" />
        <To name="signal_in1" target="4" />
      </Wire>
      <Wire id="10" backingitemid="" prefab="bluewire">
        <From name="signal_out" target="4" />
        <To name="signal_out2" target="" />
      </Wire>
      <Wire id="11" backingitemid="" prefab="redwire">
        <From name="signal_in1" target="" />
        <To name="signal_out1" target="" />
      </Wire>
      <Wire id="12" backingitemid="" prefab="redwire">
        <From name="signal_out" target="0" />
        <To name="signal_out2" target="" />
      </Wire>
      <Label id="0" color="#7ED3E0" position="365,150" size="1463,692" header="open on dock" body="if docked, and door is not open, open the door." />
      <Label id="1" color="#7ED3E0" position="207,-677" size="1521,619" header="close door at sea" body="If at sea and the door is open, close it after a delay." />
      <Label id="2" color="#7ED3E0" position="75,970" size="667,360" header="close door on undock" body="If you just undocked and the door is open, immediately close the door." />
      <Label id="3" color="#FF00FF" position="2245,-564" size="982,217" header="Purpose" body="This circuit is ment to replace the default docking hatch. It will close the doors automatically after a while undocked. This can be useful on some subs like the R-29 Big Rig." />
      <Label id="4" color="#7E00E0" position="2309,684" size="870,240" header="Description" body="An airlock replacement that can close itself after a delay. Useful for docking ports that are also airlocks, like on the R-29 Big Rig." />
      <Label id="5" color="#0082FF" position="2952,54" size="512,256" header="Blueprints" body="Circuit made with Blueprints. &#xA; &#xA; Get it now on the steam workshop!" />
    </CircuitBox>
    <itemstats />
  </Item>
</Root>
